Imports: {
	import static gate.Utils.*;

}


/*
*  mitralMobilityVariables.jape
*
* Copyright (c) 2020- , University of Bristol, Bristol.
*  Tim Dong, 31 January 2020 
*  $Id: mitralMobilityVariables.jape,v 1.0 2020/01/31 19:24:00 GMT
*
* The Phase separates Annotations of mitral valve mobility Variable relations from Lookup Annotations 
*/

Phase: mitralMobilityVariables
Input: Token Lookup  
Options: control=appelt 



Rule: MitralMobilityValueRule
(
(
({Token.string ==~ "(?i)MITRAL"} {Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)ATRIOVENTRICULAR"}
{Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)MV"} | {Token.string ==~ "(?i)LAVV"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)AV"} {Token.string ==~ "(?i)VALVE"})
({Token.string !=~ "(?i)ATRIUM", Token.string !=~ "(?i)AORTIC"} | {SpaceToken.string!=ATRIUM})*

):context
)

(
(

( {Token.string ==~ "(?i)RESTRICTED"} | {Token.string ==~ "(?i)RESTRICTING"} | {Token.string ==~ "(?i)RESTRICTION"} | 
{Token.string ==~ "(?i)RESTRICTIVE"})


):context


):MitralMobilityValueGram 

--> 
:MitralMobilityValueGram
  {

	gate.AnnotationSet matchedcontext=(gate.AnnotationSet) bindings.get("context");
	
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("MitralMobilityValueGram");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
		
	newFeatures.put("varValue", "0");
	newFeatures.put("unit", "0 (restricted) to 1 (mobile)");
	newFeatures.put("varType","MV Mobility");
	newFeatures.put("context", stringFor(doc, matchedcontext));
	newFeatures.put("rule", "MV Mobility normal");
	
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"VesselsMeasurements", newFeatures);
  }


Rule: MitralMobilityAltern1EValueRule
(
(
({Token.string ==~ "(?i)MITRAL"} {Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)ATRIOVENTRICULAR"}
{Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)MV"} | {Token.string ==~ "(?i)LAVV"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)AV"} {Token.string ==~ "(?i)VALVE"})
({Token.string !=~ "(?i)ATRIUM", Token.string !=~ "(?i)AORTIC"} | {SpaceToken.string!=ATRIUM})*

):context
)

(
(

({Token.string ==~ "(?i)REDUCED"} | {Token.string ==~ "(?i)DECREASED"})
({Token.string ==~ "(?i)MOBILITY"} | {Token.string ==~ "(?i)EXCURSION"})

):context


):MitralMobilityAltern1EValueGram 

--> 
:MitralMobilityAltern1EValueGram
  {

	gate.AnnotationSet matchedcontext=(gate.AnnotationSet) bindings.get("context");
	
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("MitralMobilityAltern1EValueGram");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
		
	newFeatures.put("varValue", "0");
	newFeatures.put("unit", "0 (restricted) to 1 (mobile)");
	newFeatures.put("varType","MV Mobility");
	newFeatures.put("context", stringFor(doc, matchedcontext));
	newFeatures.put("rule", "MV Mobility altern1E");
	
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"VesselsMeasurements", newFeatures);
  }
  
Rule: MitralMobilityAltern1FValueRule
(
(
({Token.string ==~ "(?i)MITRAL"} {Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)ATRIOVENTRICULAR"}
{Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)MV"} | {Token.string ==~ "(?i)LAVV"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)AV"} {Token.string ==~ "(?i)VALVE"})
({Token.string !=~ "(?i)ATRIUM", Token.string !=~ "(?i)AORTIC"} | {SpaceToken.string!=ATRIUM})*

):context
)

(
(

({Token.string ==~ "(?i)MOBILITY"} | {Token.string ==~ "(?i)EXCURSION"})
({Token.kind == "word"})?
({Token.string ==~ "(?i)REDUCED"} | {Token.string ==~ "(?i)DECREASED"})

):context


):MitralMobilityAltern1FValueGram 

--> 
:MitralMobilityAltern1FValueGram
  {

	gate.AnnotationSet matchedcontext=(gate.AnnotationSet) bindings.get("context");
	
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("MitralMobilityAltern1FValueGram");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
		
	newFeatures.put("varValue", "0");
	newFeatures.put("unit", "0 (restricted) to 1 (mobile)");
	newFeatures.put("varType","MV Mobility");
	newFeatures.put("context", stringFor(doc, matchedcontext));
	newFeatures.put("rule", "MV Mobility altern1F");
	
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"VesselsMeasurements", newFeatures);
  }


Rule: MitralMobilityAltern1AValueRule
(
(
({Token.string ==~ "(?i)MITRAL"} {Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)ATRIOVENTRICULAR"}
{Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)MV"} | {Token.string ==~ "(?i)LAVV"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)AV"} {Token.string ==~ "(?i)VALVE"})
({Token.string !=~ "(?i)ATRIUM", Token.string !=~ "(?i)AORTIC"} | {SpaceToken.string!=ATRIUM})*

):context
)

(
(

{Token.string ==~ "(?i)MOBILE"}
({Token.kind == "word"})?
({Token.kind == "word"})?
({Token.kind == "word"})?
{Token.string ==~ "(?i)LEAFLET[S]?"}  


):context


):MitralMobilityAltern1AValueGram 

--> 
:MitralMobilityAltern1AValueGram
  {

	gate.AnnotationSet matchedcontext=(gate.AnnotationSet) bindings.get("context");
	
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("MitralMobilityAltern1AValueGram");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
		
	newFeatures.put("varValue", "1");
	newFeatures.put("unit", "0 (restricted) to 1 (mobile)");
	newFeatures.put("varType","MV Mobility");
	newFeatures.put("context", stringFor(doc, matchedcontext));
	newFeatures.put("rule", "MV Mobility altern1A");
	
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"VesselsMeasurements", newFeatures);
  }
  
  
Rule: MitralMobilityAltern1BValueRule
(
(
({Token.string ==~ "(?i)MITRAL"} {Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)ATRIOVENTRICULAR"}
{Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)MV"} | {Token.string ==~ "(?i)LAVV"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)AV"} {Token.string ==~ "(?i)VALVE"})
({Token.string !=~ "(?i)ATRIUM", Token.string !=~ "(?i)AORTIC"} | {SpaceToken.string!=ATRIUM})*

):context
)

(
(


({Token.string ==~ "(?i)LEAFLET[S]?"})
({Token.kind == "word"})?
({Token.kind == "word"})?
({Token.kind == "word"})?
({Token.kind == "word"})?
{Token.string ==~ "(?i)MOBILE"}


):context


):MitralMobilityAltern1BValueGram 

--> 
:MitralMobilityAltern1BValueGram
  {

	gate.AnnotationSet matchedcontext=(gate.AnnotationSet) bindings.get("context");
	
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("MitralMobilityAltern1BValueGram");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
		
	newFeatures.put("varValue", "1");
	newFeatures.put("unit", "0 (restricted) to 1 (mobile)");
	newFeatures.put("varType","MV Mobility");
	newFeatures.put("context", stringFor(doc, matchedcontext));
	newFeatures.put("rule", "MV Mobility altern1B");
	
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"VesselsMeasurements", newFeatures);
  }
  
  
Rule: MitralMobilityAltern1CValueRule
(
(
({Token.string ==~ "(?i)MITRAL"} {Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)ATRIOVENTRICULAR"}
{Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)MV"} | {Token.string ==~ "(?i)LAVV"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)AV"} {Token.string ==~ "(?i)VALVE"})
({Token.string !=~ "(?i)ATRIUM", Token.string !=~ "(?i)AORTIC"} | {SpaceToken.string!=ATRIUM})*

):context
)

(
(


({Token.string ==~ "(?i)GOOD"} | {Token.string ==~ "(?i)REASONABLE"})
({Token.string ==~ "(?i)MOBILITY"} | {Token.string ==~ "(?i)EXCURSION"})


):context


):MitralMobilityAltern1CValueGram 

--> 
:MitralMobilityAltern1CValueGram
  {

	gate.AnnotationSet matchedcontext=(gate.AnnotationSet) bindings.get("context");
	
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("MitralMobilityAltern1CValueGram");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
		
	newFeatures.put("varValue", "1");
	newFeatures.put("unit", "0 (restricted) to 1 (mobile)");
	newFeatures.put("varType","MV Mobility");
	newFeatures.put("context", stringFor(doc, matchedcontext));
	newFeatures.put("rule", "MV Mobility altern1C");
	
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"VesselsMeasurements", newFeatures);
  }

Rule: MitralMobilityAltern1DValueRule
(
(
({Token.string ==~ "(?i)MITRAL"} {Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)ATRIOVENTRICULAR"}
{Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)MV"} | {Token.string ==~ "(?i)LAVV"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)AV"} {Token.string ==~ "(?i)VALVE"})
({Token.string !=~ "(?i)ATRIUM", Token.string !=~ "(?i)AORTIC"} | {SpaceToken.string!=ATRIUM})*

):context
)

(
(

({Token.string ==~ "(?i)MOBILITY"} | {Token.string ==~ "(?i)EXCURSION"})
({Token.kind == "word"})?
({Token.string ==~ "(?i)GOOD"} | {Token.string ==~ "(?i)REASONABLE"})

):context


):MitralMobilityAltern1DValueGram 

--> 
:MitralMobilityAltern1DValueGram
  {

	gate.AnnotationSet matchedcontext=(gate.AnnotationSet) bindings.get("context");
	
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("MitralMobilityAltern1DValueGram");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
		
	newFeatures.put("varValue", "1");
	newFeatures.put("unit", "0 (restricted) to 1 (mobile)");
	newFeatures.put("varType","MV Mobility");
	newFeatures.put("context", stringFor(doc, matchedcontext));
	newFeatures.put("rule", "MV Mobility altern1D");
	
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"VesselsMeasurements", newFeatures);
  }


Rule: MitralMobilityAltern2ValueRule
Priority: 10
(
(
({Token.string ==~ "(?i)MITRAL"} {Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)ATRIOVENTRICULAR"}
{Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)MV"} | {Token.string ==~ "(?i)LAVV"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)AV"} {Token.string ==~ "(?i)VALVE"})
({Token.string !=~ "(?i)ATRIUM", Token.string !=~ "(?i)AORTIC"} | {SpaceToken.string!=ATRIUM})*

):context
)

(
(

(
{Token.string ==~ "(?i)NO"} | {Token.string ==~ "(?i)NOT"} |
{Token.string ==~ "(?i)NO"} {Token.string ==~ "(?i)MITRAL"} 
)

( {Token.string ==~ "(?i)RESTRICTED"} | {Token.string ==~ "(?i)RESTRICTING"} | {Token.string ==~ "(?i)RESTRICTION"} | 
{Token.string ==~ "(?i)RESTRICTIVE"})


):context


):MitralMobilityAltern2ValueGram 

--> 
:MitralMobilityAltern2ValueGram
  {

	gate.AnnotationSet matchedcontext=(gate.AnnotationSet) bindings.get("context");
	
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("MitralMobilityAltern2ValueGram");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
		
	newFeatures.put("varValue", "1");
	newFeatures.put("unit", "0 (restricted) to 1 (mobile)");
	newFeatures.put("varType","MV Mobility");
	newFeatures.put("context", stringFor(doc, matchedcontext));
	newFeatures.put("rule", "MV Mobility altern2");
	
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"VesselsMeasurements", newFeatures);
  }