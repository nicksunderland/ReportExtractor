Imports: {
	import static gate.Utils.*;

}


/*
*  mitralRegurgitationLevelVariables.jape
*
* Copyright (c) 2020- , University of Bristol, Bristol.
*  Tim Dong, 31 January 2020 
*  $Id: mitralRegurgitationLevelVariables.jape,v 1.0 2020/01/31 19:24:00 GMT
*
* The Phase separates Annotations of mitral regurgitation level Variable relations from Lookup Annotations 
*/

Phase: mitralRegurgitationLevelVariables
Input: Token Lookup  
Options: control=Appelt 


Macro: mitralRegurgSeverityTerm
(
({Token.string ==~ "(?i)MINIMAL"} | {Token.string ==~ "(?i)MINIMUM"} | {Token.string ==~ "(?i)TRIVIAL"} | 
{Token.string ==~ "(?i)VERY"} {Token.string ==~ "(?i)MILD"} | {Token.string ==~ "(?i)TRACE"}):trivial | 
({Token.string ==~ "(?i)MILD"} | {Token.string ==~ "(?i)TRIVIAL-MILD"}):mild | 
({Token.string ==~ "(?i)MODERATE"} | {Token.string ==~ "(?i)MILD-MODERATE"}):moderate |
({Token.string ==~ "(?i)HEAVY"} | {Token.string ==~ "(?i)MARKED"} | {Token.string ==~ "(?i)PROMINENT"} | {Token.string ==~ "(?i)SEVERE"} | {Token.string ==~ "(?i)MODERATE-SEVERE"}):severe
)

Macro: mitralRegurgitationTerm
(
{Token.string ==~ "(?i)REGURGITATION"} | {Token.string ==~ "(?i)MR"} | {Token.string ==~ "(?i)MITRAL"} {Token.string ==~ "(?i)REGURGITATION"} | {Token.string ==~ "(?i)LAVVR"} 
)


Rule: MitralRegurgitationLevelValueRule
(
(
({Token.string ==~ "(?i)MITRAL"} {Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)ATRIOVENTRICULAR"}
{Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)MV"} | {Token.string ==~ "(?i)LAVV"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)AV"} {Token.string ==~ "(?i)VALVE"})
({Token.string !=~ "(?i)ATRIUM", Token.string !=~ "(?i)AORTIC", !Lookup.majorType == MitralRegurgitation_LevelSpecific_WordExclusion} | {SpaceToken.string!=ATRIUM})*

):context
)

(
(
 
mitralRegurgSeverityTerm


mitralRegurgitationTerm


):context


):MitralRegurgitationLevelValueGram 

--> 
:MitralRegurgitationLevelValueGram
  {

	gate.AnnotationSet matchedcontext=(gate.AnnotationSet) bindings.get("context");
	
	gate.AnnotationSet matchedtrivial=(gate.AnnotationSet) bindings.get("trivial");
	gate.AnnotationSet matchedmild=(gate.AnnotationSet) bindings.get("mild");
	gate.AnnotationSet matchedmoderate=(gate.AnnotationSet) bindings.get("moderate");
	gate.AnnotationSet matchedsevere=(gate.AnnotationSet) bindings.get("severe");
	
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("MitralRegurgitationLevelValueGram");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
	
	if (matchedtrivial != null) {
		newFeatures.put("varValue", "1");
	} else if (matchedmild != null) {
		newFeatures.put("varValue", "2");
	} else if (matchedmoderate != null) {
		newFeatures.put("varValue", "3");
	} else if (matchedsevere != null) {
		newFeatures.put("varValue", "4");
	} else {
		newFeatures.put("varValue", "0");
	}
	
	newFeatures.put("unit", "scale 0 (no regurgitation) to 4 (Severe regurgitation)");
	newFeatures.put("varType","MR level");
	newFeatures.put("context", stringFor(doc, matchedcontext));
	newFeatures.put("rule", "MR level normal");
	
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"VesselsMeasurements", newFeatures);
  }
  
 
 
Rule: MitralRegurgitationLevelAlternValueRule
Priority: 10
(
(
({Token.string ==~ "(?i)MITRAL"} {Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)ATRIOVENTRICULAR"}
{Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)MV"} | {Token.string ==~ "(?i)LAVV"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)AV"} {Token.string ==~ "(?i)VALVE"})
({Token.string !=~ "(?i)ATRIUM", Token.string !=~ "(?i)AORTIC", !Lookup.majorType == MitralRegurgitation_LevelSpecific_WordExclusion} | {SpaceToken.string!=ATRIUM})*

):context
)


(
(
 
mitralRegurgSeverityTerm 


({Token.kind == "word", !Lookup.majorType == severity_Level_All})?

mitralRegurgitationTerm


):context


):MitralRegurgitationLevelAlternValueGram 

--> 
:MitralRegurgitationLevelAlternValueGram
  {

	gate.AnnotationSet matchedcontext=(gate.AnnotationSet) bindings.get("context");
	
	gate.AnnotationSet matchedtrivial=(gate.AnnotationSet) bindings.get("trivial");
	gate.AnnotationSet matchedmild=(gate.AnnotationSet) bindings.get("mild");
	gate.AnnotationSet matchedmoderate=(gate.AnnotationSet) bindings.get("moderate");
	gate.AnnotationSet matchedsevere=(gate.AnnotationSet) bindings.get("severe");
	
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("MitralRegurgitationLevelAlternValueGram");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
	
	if (matchedtrivial != null) {
		newFeatures.put("varValue", "1");
	} else if (matchedmild != null) {
		newFeatures.put("varValue", "2");
	} else if (matchedmoderate != null) {
		newFeatures.put("varValue", "3");
	} else if (matchedsevere != null) {
		newFeatures.put("varValue", "4");
	} else {
		newFeatures.put("varValue", "0");
	}
	
	newFeatures.put("unit", "scale 0 (no regurgitation) to 4 (Severe regurgitation)");
	newFeatures.put("varType","MR level");
	newFeatures.put("context", stringFor(doc, matchedcontext));
	newFeatures.put("rule", "MR level altern");
	
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"VesselsMeasurements", newFeatures);
  }
  

Rule: MitralRegurgitationLevelAltern2ValueRule
Priority: 10
(
(
({Token.string ==~ "(?i)MITRAL"} {Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)ATRIOVENTRICULAR"}
{Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)MV"} | {Token.string ==~ "(?i)LAVV"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)AV"} {Token.string ==~ "(?i)VALVE"})
({Token.string !=~ "(?i)ATRIUM", Token.string !=~ "(?i)AORTIC", !Lookup.majorType == MitralRegurgitation_LevelSpecific_WordExclusion} | {SpaceToken.string!=ATRIUM})*

):context
)


(
(

mitralRegurgSeverityTerm


({Token.kind == "word", !Lookup.majorType == severity_Level_All})?
({Token.kind == "word", !Lookup.majorType == severity_Level_All})?

mitralRegurgitationTerm


):context


):MitralRegurgitationLevelAltern2ValueGram 

--> 
:MitralRegurgitationLevelAltern2ValueGram
  {

	gate.AnnotationSet matchedcontext=(gate.AnnotationSet) bindings.get("context");
	
	gate.AnnotationSet matchedtrivial=(gate.AnnotationSet) bindings.get("trivial");
	gate.AnnotationSet matchedmild=(gate.AnnotationSet) bindings.get("mild");
	gate.AnnotationSet matchedmoderate=(gate.AnnotationSet) bindings.get("moderate");
	gate.AnnotationSet matchedsevere=(gate.AnnotationSet) bindings.get("severe");
	
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("MitralRegurgitationLevelAltern2ValueGram");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
	
	if (matchedtrivial != null) {
		newFeatures.put("varValue", "1");
	} else if (matchedmild != null) {
		newFeatures.put("varValue", "2");
	} else if (matchedmoderate != null) {
		newFeatures.put("varValue", "3");
	} else if (matchedsevere != null) {
		newFeatures.put("varValue", "4");
	} else {
		newFeatures.put("varValue", "0");
	}
	
	newFeatures.put("unit", "scale 0 (no regurgitation) to 4 (Severe regurgitation)");
	newFeatures.put("varType","MR level");
	newFeatures.put("context", stringFor(doc, matchedcontext));
	newFeatures.put("rule", "MR level altern2");
	
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"VesselsMeasurements", newFeatures);
  }
  
  
Rule: MitralRegurgitationLevelAltern3ValueRule
Priority: 10
(
(
({Token.string ==~ "(?i)MITRAL"} {Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)ATRIOVENTRICULAR"}
{Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)MV"} | {Token.string ==~ "(?i)LAVV"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)AV"} {Token.string ==~ "(?i)VALVE"})
({Token.string !=~ "(?i)ATRIUM", Token.string !=~ "(?i)AORTIC", !Lookup.majorType == MitralRegurgitation_LevelSpecific_WordExclusion} | {SpaceToken.string!=ATRIUM})*

):context
)


(
(

mitralRegurgSeverityTerm 


({Token.kind == "word", !Lookup.majorType == severity_Level_All})?
({Token.kind == "word", !Lookup.majorType == severity_Level_All})?
({Token.kind == "word", !Lookup.majorType == severity_Level_All})?

mitralRegurgitationTerm


):context


):MitralRegurgitationLevelAltern3ValueGram 

--> 
:MitralRegurgitationLevelAltern3ValueGram
  {

	gate.AnnotationSet matchedcontext=(gate.AnnotationSet) bindings.get("context");
	
	gate.AnnotationSet matchedtrivial=(gate.AnnotationSet) bindings.get("trivial");
	gate.AnnotationSet matchedmild=(gate.AnnotationSet) bindings.get("mild");
	gate.AnnotationSet matchedmoderate=(gate.AnnotationSet) bindings.get("moderate");
	gate.AnnotationSet matchedsevere=(gate.AnnotationSet) bindings.get("severe");
	
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("MitralRegurgitationLevelAltern3ValueGram");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
	
	if (matchedtrivial != null) {
		newFeatures.put("varValue", "1");
	} else if (matchedmild != null) {
		newFeatures.put("varValue", "2");
	} else if (matchedmoderate != null) {
		newFeatures.put("varValue", "3");
	} else if (matchedsevere != null) {
		newFeatures.put("varValue", "4");
	} else {
		newFeatures.put("varValue", "0");
	}
	
	newFeatures.put("unit", "scale 0 (no regurgitation) to 4 (Severe regurgitation)");
	newFeatures.put("varType","MR level");
	newFeatures.put("context", stringFor(doc, matchedcontext));
	newFeatures.put("rule", "MR level altern2");
	
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"VesselsMeasurements", newFeatures);
  }
  
  
Rule: MitralRegurgitationLevelAlternNonValueRule
Priority: 10
(
(
({Token.string ==~ "(?i)MITRAL"} {Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)ATRIOVENTRICULAR"}
{Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)MV"} | {Token.string ==~ "(?i)LAVV"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)AV"} {Token.string ==~ "(?i)VALVE"})
({Token.string !=~ "(?i)ATRIUM", Token.string !=~ "(?i)AORTIC", !Lookup.majorType == MitralRegurgitation_LevelSpecific_WordExclusion} | {SpaceToken.string!=ATRIUM})*

):context
)

(
(

(
{Token.string ==~ "(?i)NO[N]?"} | {Token.string ==~ "(?i)NOT"} |
{Token.string ==~ "(?i)NO"} {Token.string ==~ "(?i)MITRAL"} 
)

({Token.kind == "word", !Lookup.majorType == severity_Level_All})?
({Token.kind == "word", !Lookup.majorType == severity_Level_All})?
({Token.kind == "word", !Lookup.majorType == severity_Level_All})?

mitralRegurgitationTerm

):context


):MitralRegurgitationLevelAlternNonValueGram 

--> 
:MitralRegurgitationLevelAlternNonValueGram
  {

	gate.AnnotationSet matchedcontext=(gate.AnnotationSet) bindings.get("context");
	
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("MitralRegurgitationLevelAlternNonValueGram");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
		
	newFeatures.put("varValue", "0");
	newFeatures.put("unit", "scale 0 (no regurgitation) to 4 (Severe regurgitation)");
	newFeatures.put("varType","MR level");
	newFeatures.put("context", stringFor(doc, matchedcontext));
	newFeatures.put("rule", "MR level alternNon");
	
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"VesselsMeasurements", newFeatures);
  }
  
  
Rule:MitralRegurgitationLevelUnboundedValueRule
(
(


mitralRegurgSeverityTerm 


(({Token.string ==~ "(?i)MITRAL"} | {Token.string ==~ "(?i)MITRAL"} {Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)ATRIOVENTRICULAR"} {Token.string ==~ "(?i)VALVE"} | {Token.string ==~ "(?i)MV"} | {Token.string ==~ "(?i)LAVV"} | {Token.string ==~ "(?i)LEFT"} {Token.string ==~ "(?i)AV"} {Token.string ==~ "(?i)VALVE"})
{Token.string ==~ "(?i)REGURGITATION"} | {Token.string ==~ "(?i)MR"} | {Token.string ==~ "(?i)LAVVR"})


):context


):MitralRegurgitationLevelUnboundedValueGram 

--> 
:MitralRegurgitationLevelUnboundedValueGram
  {

	gate.AnnotationSet matchedcontext=(gate.AnnotationSet) bindings.get("context");
	
	gate.AnnotationSet matchedtrivial=(gate.AnnotationSet) bindings.get("trivial");
	gate.AnnotationSet matchedmild=(gate.AnnotationSet) bindings.get("mild");
	gate.AnnotationSet matchedmoderate=(gate.AnnotationSet) bindings.get("moderate");
	gate.AnnotationSet matchedsevere=(gate.AnnotationSet) bindings.get("severe");
	
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("MitralRegurgitationLevelUnboundedValueGram");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
	
	if (matchedtrivial != null) {
		newFeatures.put("varValue", "1");
	} else if (matchedmild != null) {
		newFeatures.put("varValue", "2");
	} else if (matchedmoderate != null) {
		newFeatures.put("varValue", "3");
	} else if (matchedsevere != null) {
		newFeatures.put("varValue", "4");
	} else {
		newFeatures.put("varValue", "0");
	}
	
	newFeatures.put("unit", "scale 0 (no regurgitation) to 4 (Severe regurgitation)");
	newFeatures.put("varType","MR level");
	newFeatures.put("context", stringFor(doc, matchedcontext));
	newFeatures.put("rule", "MR level Unbounded");
	
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"VesselsMeasurements", newFeatures);
  }