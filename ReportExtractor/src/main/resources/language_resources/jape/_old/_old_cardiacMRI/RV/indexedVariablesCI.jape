/*
*  indexedVariablesCI.jape
*
* Copyright (c) 2020- , University of Bristol, Bristol.
*  Tim Dong, 31 January 2020
*  $Id: indexedVariablesCI.jape,v 1.0 2020/01/31 19:24:00 GMT
*
* The Phase separates Annotations of CI relations from Lookup Annotations for Right Ventricle variables
*/

Phase: indexedVariablesCI
Input: Token Lookup  
Options: control=all 


Rule: RVCIValueRule
(
{Token.string =~ ".*RV"}
({Token.string !=~ ".*LV"}|{SpaceToken.string!=Cardiac})*
({Token.string == "Cardiac"}
{Token.string == "Index"}
{Token.position == startpunct}
({Token.string != "min"})*	
{Token.string == "min"}	
{Token.string == "/"}
{Token.string == "m"}{Token.string == "2"}
{Token.position == endpunct}
)
)
(
({Token.kind == "number"})?
({Token.string == "."})?
{Token.kind == "number"}
):RVCardiacIndexValueGram 

--> 
:RVCardiacIndexValueGram
  {
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("RVCardiacIndexValueGram");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
	newFeatures.put("rule","RVCIValueRule");
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"IRVCIValue", newFeatures);
  }
  

Rule: RVCIValueAlternRule
(
{Token.string =~ ".*RV[E]?[F]?"} 
({Token.string !=~ ".*LV[E]?[F]?"}|{SpaceToken.string!=Cardiac})*
{Token.string == "Cardiac"}	
{Token.string == "index"}	
)
(
({Token.kind == "number"})?
({Token.string == "."})?
{Token.kind == "number"}
):RVCIValueAlternGramAbbrev 

--> 
:RVCIValueAlternGramAbbrev
  {
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("RVCIValueAlternGramAbbrev");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
	newFeatures.put("rule","RVCIValueAlternRule");
	outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"IRVCIValue", newFeatures);
  }

